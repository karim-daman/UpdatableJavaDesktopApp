/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package updatablejavadesktopapp;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author karim
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();

        btn_update.setVisible(false);

        String filePath = "src\\updatablejavadesktopapp\\version.json";
        readAndPrintJsonFile(filePath);
        String fileURL = "https://raw.githubusercontent.com/karim-daman/UpdatableJavaDesktopApp/main/version";

        try {
            //Create a URL object
            URL url = new URL(fileURL);

            // Open a connection to the URL
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            // Get the input stream of the connection
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String inputLine;
            StringBuilder content = new StringBuilder();

            // Read the file line by line
            while ((inputLine = in.readLine()) != null) {
                content.append(inputLine).append("\n");
            }

            // Close the connections
            in.close();
            connection.disconnect();

            remoteVersion = content.toString().trim();

            if (remoteVersion.equals(localVersion)) {
                System.out.println("Version matches");
                versionValue.setText("0.0.0.1");
            } else {
                System.out.println("need to Update");
                btn_update.setVisible(true);
                btn_update.setText("Update to " + remoteVersion);
                versionValue.setText("Update available");
            }

        } catch (IOException e) {
            System.out.print(e);
            versionValue.setText(e.toString());
        }

    }

    public static String localVersion = "", remoteVersion = "";

    public static void readAndPrintJsonFile(String filePath) {
        try {
            // Read the file content into a String
            String content = new String(Files.readAllBytes(Paths.get(filePath)));

            // Parse the content as JSON
            JSONObject json = new JSONObject(content);

            // Extract specific values using keys
            localVersion = json.getString("version").trim();

        } catch (IOException | JSONException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        versionValue = new javax.swing.JLabel();
        btn_update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Version");

        versionValue.setText("version");

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addComponent(versionValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_update))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(versionValue)
                    .addComponent(btn_update))
                .addGap(0, 275, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
//       private static void downloadAndUpdate(GHRelease release) throws IOException {
//        for (GHAsset asset : release.getAssets()) {
//            if (asset.getName().endsWith(".jar")) {
//                URL url = new URL(asset.getBrowserDownloadUrl());
//                Path targetPath = Paths.get("path/to/your/app.jar");
//                
//                // Download the new JAR
//                try (InputStream in = url.openStream()) {
//                    Files.copy(in, targetPath, StandardCopyOption.REPLACE_EXISTING);
//                }
//
//                // Restart the application
//                restartApplication();
//            }
//        }
//        
//        
//         private static void restartApplication() throws IOException {
//        String javaBin = System.getProperty("java.home") + File.separator + "bin" + File.separator + "java";
//        File currentJar = new File(AutoUpdater.class.getProtectionDomain().getCodeSource().getLocation().toURI());
//
//        if (!currentJar.getName().endsWith(".jar"))
//            return;
//
//        ProcessBuilder builder = new ProcessBuilder(javaBin, "-jar", currentJar.getPath());
//        builder.start();
//        System.exit(0);
//    }
        
//    }

    }//GEN-LAST:event_btn_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel versionValue;
    // End of variables declaration//GEN-END:variables
}
